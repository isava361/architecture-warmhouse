asyncapi: 2.6.0
info:
  title: Event Bus for Smart Home
  version: '1.0.0'
  description: >
    Kafka-шина для обмена событиями в экосистеме умных посёлков «Тёплый дом».
    • TelemetryEvent публикуется IoT-Proxy ➜ Kafka ➜ Telemetry-service & Scenario-service
    • ScenarioTriggeredEvent публикуется Scenario-service ➜ Kafka ➜ Notification-service

defaultContentType: application/json

channels:

  telemetry.device.{deviceId}:
    description: Сырые показания конкретного устройства
    parameters:
      deviceId:
        description: Идентификатор устройства (UUID или numeric-ID)
        schema:
          type: string
    publish:         # IoT-Proxy публикует
      summary: Публикация TelemetryEvent
      message:
        $ref: '#/components/messages/TelemetryEvent'

  scenario.triggered:
    description: Факт, что сценарий выполнился и (возможно) отправил команду устройству
    publish:         # Scenario-service публикует
      summary: Публикация ScenarioTriggeredEvent
      message:
        $ref: '#/components/messages/ScenarioTriggeredEvent'

components:

  messages:

    TelemetryEvent:
      name: TelemetryEvent
      title: Событие телеметрии
      summary: Текущее значение метрики сенсора
      contentType: application/json
      payload:
        $ref: '#/components/schemas/Telemetry'
      examples:
        - name: Пример температуры
          payload:
            deviceUUID: "dev-a8329"
            timestamp: "2025-07-06T12:34:56Z"
            metric: TEMPERATURE
            value: 23.5
            unit: "°C"
      bindings:
        kafka:
          key:
            type: string
            description: deviceId для партиционирования
          partitions: 12
          retention: 604800000   # 7 дней в мс

    ScenarioTriggeredEvent:
      name: ScenarioTriggeredEvent
      title: Срабатывание сценария
      summary: Сообщает, что сценарий выполнен и/или отправлена команда
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ScenarioTriggered'
      examples:
        - name: Пример срабатывания
          payload:
            scenarioId: 8457
            userId: 12314044224
            triggeredAt: "2025-07-06T13:00:00Z"
            deviceUUID: "dev-a8329"
            action: SET_TEMP
            params:
              temperature: 21
            result: "SUCCESS"
      bindings:
        kafka:
          key:
            type: string
            description: scenarioId
          partitions: 6
          retention: 2592000000   # 30 дней

  schemas:

    Telemetry:
      type: object
      required: [deviceUUID, timestamp, metric, value]
      properties:
        deviceUUID:
          type: string
        timestamp:
          type: string
          format: date-time
        metric:
          type: string
          enum: [TEMPERATURE, HUMIDITY, STATUS]
        value:
          type: number
        unit:
          type: string
          description: "°C, %, bool и т. д."

    ScenarioTriggered:
      type: object
      required: [scenarioId, triggeredAt, deviceUUID, action]
      properties:
        scenarioId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        triggeredAt:
          type: string
          format: date-time
        deviceUUID:
          type: string
        action:
          type: string
          enum: [SWITCH_ON, SWITCH_OFF, SET_TEMP]
        params:
          type: object
          description: "Доп. параметры команды"
          additionalProperties: true
        result:
          type: string
          enum: [SUCCESS, FAILED, PENDING]
          description: "Итог выполнения команды"
